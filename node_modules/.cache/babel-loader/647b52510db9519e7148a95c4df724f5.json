{"remainingRequest":"/Users/apple/Desktop/qz/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/qz/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/Desktop/qz/src/utils/sign.js","dependencies":[{"path":"/Users/apple/Desktop/qz/src/utils/sign.js","mtime":1569475970611},{"path":"/Users/apple/Desktop/qz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/qz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/qz/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport md5 from 'js-md5';\nimport { APP_KEY } from '@/service/config';\nvar signJs = {\n  miscellaneous: {\n    getSign: {},\n    signedParams: {}\n  }\n};\n/**\n * @synopsis zhkj-api-签名算法\n *\n * @param params 需要对象被签名的对象\n *\n * @returns\n */\n\nsignJs.miscellaneous.getSign = function (params) {\n  var data = raw(params) + '&key=' + APP_KEY;\n  return md5(data).toUpperCase();\n};\n\nsignJs.miscellaneous.signedParams = function (params) {\n  var sign = signJs.miscellaneous.getSign(params);\n  return Object.assign(params, {\n    sign: sign\n  });\n};\n\nvar raw = function raw(args) {\n  var keys = Object.keys(args);\n  keys = keys.sort(function (a, b) {\n    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;\n  });\n  var newArgs = {};\n  keys.forEach(function (key) {\n    newArgs[key] = args[key];\n  });\n  var string = \"\";\n\n  for (var k in newArgs) {\n    string += \"&\" + k + \"=\" + newArgs[k];\n  }\n\n  string = string.substr(1);\n  console.log(string);\n  return string;\n};\n\nexport default signJs;",{"version":3,"sources":["/Users/apple/Desktop/qz/src/utils/sign.js"],"names":["md5","APP_KEY","signJs","miscellaneous","getSign","signedParams","params","data","raw","toUpperCase","sign","Object","assign","args","keys","sort","a","b","toLowerCase","newArgs","forEach","key","string","k","substr","console","log"],"mappings":";;;AACA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,YAAY,EAAE;AAFD;AADJ,CAAb;AAOA;;;;;;;;AAOAH,MAAM,CAACC,aAAP,CAAqBC,OAArB,GAA+B,UAAAE,MAAM,EAAI;AACvC,MAAIC,IAAI,GAAGC,GAAG,CAACF,MAAD,CAAH,GAAc,OAAd,GAAwBL,OAAnC;AACA,SAAOD,GAAG,CAACO,IAAD,CAAH,CAAUE,WAAV,EAAP;AACD,CAHD;;AAIAP,MAAM,CAACC,aAAP,CAAqBE,YAArB,GAAoC,UAAAC,MAAM,EAAI;AAC5C,MAAII,IAAI,GAAGR,MAAM,CAACC,aAAP,CAAqBC,OAArB,CAA6BE,MAA7B,CAAX;AACA,SAAOK,MAAM,CAACC,MAAP,CAAcN,MAAd,EAAsB;AAAEI,IAAAA,IAAI,EAAEA;AAAR,GAAtB,CAAP;AACD,CAHD;;AAKA,IAAIF,GAAG,GAAG,SAANA,GAAM,CAASK,IAAT,EAAe;AACvB,MAAIC,IAAI,GAAGH,MAAM,CAACG,IAAP,CAAYD,IAAZ,CAAX;AACAC,EAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,CAAU,UAACC,CAAD,EAAGC,CAAH;AAAA,WAASD,CAAC,CAACE,WAAF,KAAkBD,CAAC,CAACC,WAAF,EAAlB,GAAkC,CAAlC,GAAoC,CAAC,CAA9C;AAAA,GAAV,CAAP;AACA,MAAIC,OAAO,GAAG,EAAd;AACAL,EAAAA,IAAI,CAACM,OAAL,CAAa,UAASC,GAAT,EAAc;AACzBF,IAAAA,OAAO,CAACE,GAAD,CAAP,GAAeR,IAAI,CAACQ,GAAD,CAAnB;AACD,GAFD;AAGA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAT,IAAcJ,OAAd,EAAuB;AACrBG,IAAAA,MAAM,IAAI,MAAMC,CAAN,GAAU,GAAV,GAAgBJ,OAAO,CAACI,CAAD,CAAjC;AACD;;AACDD,EAAAA,MAAM,GAAGA,MAAM,CAACE,MAAP,CAAc,CAAd,CAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,SAAOA,MAAP;AACD,CAdD;;AAiBA,eAAepB,MAAf","sourcesContent":["\nimport md5 from 'js-md5'\nimport {APP_KEY} from '@/service/config'\n\nlet signJs = {\n  miscellaneous: {\n    getSign: {},\n    signedParams: {}\n  }\n}\n\n/**\n * @synopsis zhkj-api-签名算法\n *\n * @param params 需要对象被签名的对象\n *\n * @returns\n */\nsignJs.miscellaneous.getSign = params => {\n  let data = raw(params) + '&key=' + APP_KEY\n  return md5(data).toUpperCase()\n}\nsignJs.miscellaneous.signedParams = params => {\n  let sign = signJs.miscellaneous.getSign(params)\n  return Object.assign(params, { sign: sign })\n}\n\nlet raw = function(args) {\n  let keys = Object.keys(args);\n  keys = keys.sort((a,b)=>( a.toLowerCase() > b.toLowerCase()?1:-1))\n  let newArgs = {};\n  keys.forEach(function(key) {\n    newArgs[key] = args[key];\n  });\n  let string = \"\";\n  for (let k in newArgs) {\n    string += \"&\" + k + \"=\" + newArgs[k];\n  }\n  string = string.substr(1);\n  console.log(string)\n  return string;\n};\n\n\nexport default signJs\n"]}]}